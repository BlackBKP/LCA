<!-- Home Index -->
@{
    ViewData["Title"] = "Home Page";
}

<div class="container-fluid" style="padding-top:10px">

    <h1>Projects</h1>

    <div id="projects">

    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            GetJobs();
            //GenChart();
        });

        async function GetJobs() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobs", "Home")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {

                },
                success: function (response) {
                    //console.log("Response");
                    //console.log(response);
                    GenChart(response);
                }
            });
        }

        function GenChart(jobs) {
            $('#projects').empty();
            for (var i = 0; i < jobs.length; i++) {
                var str = '<div class="card card-dark"><div class="card-header">';
                str += '<span class="card-title">' + jobs[i].job_id + '</span></div>';
                str += '<div class="card-body"><canvas id="' + jobs[i].job_id + '" style="height:600px;width:100%"></canvas>';
                str += '</div></div>';
                $('#projects').append(str); 

                var maximum_budget = [];
                var half_budget = [];
                var progress = [];
                var pf = [];
                for (var j = 0; j < jobs[i].spent.length; j++) {
                    maximum_budget[j] = jobs[i].budget;
                    half_budget[j] = jobs[i].budget / 2;
                    progress[j] = (jobs[i].progress[j] / 100) * jobs[i].budget;
                    if (j == 0)
                        pf[j] = (jobs[i].progress[j] / 100) * jobs[i].budget;
                    else
                        pf[j] = (jobs[i].progress[j] - jobs[i].progress[j - 1]) / 100 * jobs[i].budget;
                }
                //console.log("PF" + i);
                //console.log(pf);

                var ctx = document.getElementById(jobs[i].job_id).getContext('2d');
                var chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: jobs[i].fortnight,
                        datasets: [
                            {
                                label: "Budget Spent (Accumulation)",
                                data: jobs[i].spent,
                                fill: false,
                                borderColor: ['rgba(0, 0, 255, 1)'],
                            },
                            {
                                label: "Half Budget",
                                data: half_budget,
                                fill: false,
                                borderColor: ['rgba(255, 255, 0, 0.5)'],
                            },
                            {
                                label: '100% of Budget',
                                data: maximum_budget,
                                fill: false,
                                borderColor: ['rgba(255, 0, 0, 0.5)'],
                            },
                            {
                                label: 'Progress (Accumulation)',
                                data: progress,
                                fill: false,
                                borderColor: ['rgba(0, 255, 0, 0.5)'],
                            },
                            {
                                label: 'Progress/Fortnight',
                                data: pf,
                                type: 'bar',
                            }
                        ]
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                gridLines: {
                                    display: true
                                },
                                ticks: {
                                    beginAtZero: true
                                }
                            }],
                            yAxes: [{
                                gridLines: {
                                    display: true,
                                },
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        maintainAspectRatio: false,
                        tooltips: {
                            callbacks: {
                                label: function (tooltipItem, data) {
                                    var ds_index = tooltipItem.datasetIndex;
                                    var t_index = tooltipItem.index;
                                    return data.datasets[ds_index].label + ': ' + parseInt((data.datasets[ds_index].data[t_index] / 10) * 100) + ' %';
                                }
                            }
                        }
                    }
                });
            }
        };

    </script>
}